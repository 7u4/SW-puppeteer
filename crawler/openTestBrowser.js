const puppeteer = require('puppeteer');
const fs = require('fs');

let once = true;

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

async function openBrowser(){
    let browser = await puppeteer.launch({
        headless: false,
        devtools: true,
        defaultViewport:{
            height: 1200,
            width: 1900,
            isMobile: false
        },
        //executablePath: "C:/Users/george/Desktop/chrome-win/chrome.exe",
        //ignoreDefaultArgs: ["--disable-extensions"],
        userDataDir: "./chromeProfile",
        args: [
            "--proxy-server=http://127.0.0.1:8080",
            "--ignore-certificate-errors",
            "--ssl-version-min=tls1",
            "--ssl-version-max=tls1.3",
            "--tlsv1",
            "--tlsv1.1",
            "--tlsv1.2",
            "--tlsv1.3"
            //"--disable-web-security"
        ]
    });
    let context = await browser.defaultBrowserContext();
    let pages =  await browser.pages();
    let page = pages[0];

    /*
    let client = await page.target().createCDPSession();

    var file = await fs.createWriteStream('test.txt');

    await client.send('Network.enable');

    client.on('Network.requestWillBeSent', async requestToBeSent => {
        //if(requestToBeSent['request']['url'].indexOf('service-worker') !== -1){
            file.write(requestToBeSent['request']['url'] + '\n');
            file.write(JSON.stringify(requestToBeSent['initiator']) + '\n');
            file.write('\n');
        //}

        if(once){
            console.log(requestToBeSent);
            once = false;
        }

        console.log('hi');
    })

    await page.goto('https://www.hdfc.com/', {waitUntil: 'load'});

    await sleep(20000)

    await file.end();
    console.log("test.txt was successfully created!\n");
    await browser.close();
    */
}

openBrowser();